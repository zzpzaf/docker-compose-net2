# NGINX defaul server configuration file
# version .0.0.2 - 241116
server {

    # Listen for IPv4 incoming requests on (default) port 80 
    listen 80 default_server;
    # Listen for IPv6 incoming requests on (default) port 80 
    listen [::]:80 default_server;
    
    # Set the root folder for the site and the index files that are acceptable
    root /usr/share1/nginx/wwwroot;
    # 241116 - Does not make sense any more for Angular SSR ???
    # index index.html index.htm;
    
    # Match any host/server name using the (_) which is a catch-all placeholder
    server_name _;


    # 241116 - The following 3 lines for the next location block (with `try_files $uri $uri/ /index.html;`), 
    # have been removed because the Node.js (Express) server handles all routing and rendering dynamically. 
    # location / {
    #     # Try to serve the requested file, if not found, serve index.html
    #     try_files $uri $uri/ /index.html;
    # }


    # 241116 - *** OPTIONAL *** Serve static assets directly from the 'browser/assets' folder
    # The `location /assets/` block below, serves static files (e.g., images, fonts) directly from the 
    # `/browser/assets/` folder. This reduces load on the Node.js server for common static assets.
    location /assets/ {
        alias /usr/share1/nginx/wwwroot/browser/assets/;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
    }


    # 241116 - Proxy all incoming  requests (other than /assets and /blogapi) to the Node.js (Express) server
    # Note that the The Node.js (Express) server also runs into the same container as NGINX server
    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }


    # Proxy /blogapi requests to the back-apijava1 container
    location /blogapi/ {
        proxy_pass http://net2-backend-api:8080/blogapi/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    # Optional: Add error page handling
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

}
